
server:
  port: 80
spring:
  kafka:
    consumer:
      bootstrap-servers: localhost:9092
      group-id: group_id
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

#spring:
#  jpa:
#    hibernate:
#      ddl-auto: update
#    show-sql: "true"
#    properties:
#      hibernate:
#        dialect: "org.hibernate.dialect.MySQL5Dialect"
#  database:
#    driverClassName: "com.mysql.jdbc.Driver"
#  datasource:
#    url: "jdbc:mysql://localhost:3306/itemsharingdatabase"
#    username: "root"
#    password: "Rochester24"
#    testWhileIdle: "true"
#    validationQuery: "SELECT 1"
#
#security:
#  basic:
#    enabled: false
#
#server:
#  port: 8081
#




  spring:
      jpa:
        hibernate:
           ddl-auto: update
        show-sql: "true"
         properties:
           hibernate:
             dialect: "org.hibernate.dialect.MySQL5Dialect"
      database:
        driverClassName: "com.mysql.jdbc.Driver"
      datasource:
        url: "jdbc:mysql://localhost:3306/authorization_db"
        username: "root"
        password: "{cipher}de8a2140acf533afcd9e1ee6f9156226581120ed6b49187e376694db634b7bad"
        testWhileIdle: "true"
        validationQuery: "SELECT 1"


    server:
      port: 8081

    eureka:
      instance:
        perferIpAddress: true
      client:
        registerWithEureka: true
        fetchRegistry: true
        serviceUrl:
          defaultZone: http://localhost:8761/eureka/

    security:
      oauth2:
        resource:
          userInfoUri: http://localhost:8901/user

    signing:
      key: 345345fsdgsf5345

    logging:
      level:
        com.netflix: WARN
        org.springframework.web: WARN
        com.itemsharing: DEBUG